#size(@size) {
	width: @size;
	height: @size;
}

#axisProp(@property, @direction, @amount) {
	& when (@direction = x) {
		@{property}-left: @amount;
		@{property}-right: @amount;
	}
	& when (@direction = y) {
		@{property}-top: @amount;
		@{property}-bottom: @amount;
	}
}

#noLayoutBorder(@size, @color) {
	box-shadow: 0 0 0 @size @color;
}

#offsetColumnGutter(@columns, @size) {
	&:nth-child(@{columns}) {
		margin-right: -@size;
	}

	@leftSideSelector: ~'@{columns}n+1';
	&:nth-child(@{leftSideSelector}) {
		margin-left: -@size;
	}
}

#inset(@position) {
	left: @position;
	right: @position;
	top: @position;
	bottom: @position;
}

#darkMode(@rules) {
	@media (prefers-color-scheme: dark) {
		@rules();
	}
}
#lightMode(@rules) {
	@media (prefers-color-scheme: light) {
		@rules();
	}
}

#active(@rules) {
	&:focus,
	&:hover {
		@rules();
	}
}
#clicked(@rules) {
	&:hover:focus {
		@rules();
	}
}

#simpleGrid(@columns, @gap: 0) {
	display: grid;
	grid-template-columns: repeat(@columns, 1fr);
	gap: @gap;
}

#tintedBackground(@opacity) {
	background-color: rgba(0, 0, 0, @opacity);
}

#stack(@direction, @amount, @property: margin) {
	& when (@direction = y) {
		&:not(:last-child) {
			@{property}-bottom: @amount;
		}
	}
	& when (@direction = x) {
		&:not(:last-child) {
			@{property}-right: @amount;
		}
	}
}

@deviceScreenSizeBreakPoint: 768px;
#desktop(@rules) {
	@media only screen and (min-width: @deviceScreenSizeBreakPoint) {
		@rules();
	}
}
#phone(@rules) {
	@media only screen and (max-width: @deviceScreenSizeBreakPoint) {
		@rules();
	}
}

#flexCenter() {
	display: flex;
	justify-content: center;
	align-items: center;
}
